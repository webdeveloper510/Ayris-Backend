# Generated by Django 3.2.8 on 2022-10-03 05:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import machine.models
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('visitor_counter', models.PositiveIntegerField(default=0, verbose_name='Visitor Counter')),
                ('past_counter', models.PositiveIntegerField(default=0, verbose_name='Leave Past Counter')),
                ('future_counter', models.PositiveIntegerField(default=0, verbose_name='Onwards Future Counter')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='Machine name')),
                ('manifesto', tinymce.models.HTMLField(default='')),
                ('manual', tinymce.models.HTMLField(default='')),
                ('counter', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='machine.counter')),
            ],
            options={
                'db_table': 'machine',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='template name')),
                ('path', models.FilePathField(allow_files=False, allow_folders=True, path=machine.models.template_path, recursive=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(max_length=500, verbose_name='News')),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='news', to='machine.machine')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MenuCategoryUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(auto_created=True, blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='category.category')),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='machine.machine')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'machine_menu_user',
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(auto_created=True, blank=True, null=True)),
                ('category', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='category.category')),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menu', to='machine.machine')),
            ],
            options={
                'db_table': 'machine_menu',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit_by_collumn', models.PositiveSmallIntegerField(default=0)),
                ('machine', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='config', to='machine.machine')),
                ('template', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='machine.template')),
            ],
        ),
        migrations.CreateModel(
            name='Circle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('circle_number', models.PositiveSmallIntegerField(auto_created=True, blank=True, null=True, unique=True)),
                ('circle_name', models.CharField(max_length=40, null=True, unique=True, verbose_name='Name of Circle')),
                ('circle_type', models.CharField(max_length=40, null=True, unique=True, verbose_name='Type of Circle')),
                ('machine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='circles', to='machine.machine')),
            ],
        ),
        migrations.AddConstraint(
            model_name='menucategoryuser',
            constraint=models.UniqueConstraint(fields=('user', 'category'), name='unic_user_cat'),
        ),
        migrations.AlterUniqueTogether(
            name='menucategoryuser',
            unique_together={('order', 'user')},
        ),
        migrations.AddConstraint(
            model_name='config',
            constraint=models.CheckConstraint(check=models.Q(('limit_by_collumn__range', (0, 50))), name='machine_config_page_count_range'),
        ),
    ]
