# Generated by Django 3.2.8 on 2022-10-03 05:50

import buildx.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        ('artworks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplainMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComplainMessageCat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ImagePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('image', buildx.models.ImageFieldChecker(upload_to='images', validators=[buildx.models.validate_image_extension])),
            ],
            options={
                'db_table': 'post_image',
            },
        ),
        migrations.CreateModel(
            name='PostType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'post_type',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=120)),
                ('slug', models.SlugField(blank=True, max_length=150, null=True)),
                ('content', tinymce.models.HTMLField(default='')),
                ('is_approuved', models.BooleanField(default=False)),
                ('like_counter', models.PositiveSmallIntegerField(default=0)),
                ('dislike_counter', models.PositiveSmallIntegerField(default=0)),
                ('art_work', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='artworks.artwork')),
                ('category', models.ManyToManyField(related_name='posts', to='category.Category')),
                ('complain_message', models.ManyToManyField(blank=True, to='post.ComplainMessage')),
                ('images', models.ManyToManyField(blank=True, to='post.ImagePost')),
                ('peoples', models.ManyToManyField(blank=True, to='category.People')),
                ('periods', models.ManyToManyField(blank=True, to='category.Period')),
                ('places', models.ManyToManyField(blank=True, to='category.Place')),
                ('post_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='post.posttype')),
                ('things', models.ManyToManyField(blank=True, to='category.Thing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'post',
            },
        ),
        migrations.AddField(
            model_name='complainmessage',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.complainmessagecat'),
        ),
        migrations.AddField(
            model_name='complainmessage',
            name='sender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
